# Fix colors
# set -g default-terminal "screen-256color" # Recommended by tmux
set -g default-terminal "xterm-256color" # See comment below

# Fix ctrl-arrows in vim
# Note: If default-terminal is recommended (screen-256color),
# applciations running in tmux, such as vim, might not know how
# to correctly interpret key codes turned on by this option.
# Hence, I've set default-terminal to xterm-256color, against
# official tmux recommendations. This could cause issues in the
# future
setw -g xterm-keys on 

# Stop escape-key delay
set -sg escape-time 0

# Mouse works as expected
set -g mouse on

# Automatically set window title
setw -g automatic-rename on
set -g set-titles on

# vi-mode for navigating buffers
# See: https://sanctum.geek.nz/arabesque/vi-mode-in-tmux/
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Split windows with v and s, like in vim
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
